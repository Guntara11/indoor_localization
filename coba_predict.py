import os
import pandas as pd
import numpy as np
import re  
import utils
from icecream import ic
from utils import *
from scipy.spatial import distance

def map_estimation(bayesian_likelihood):
    """
    Perform MAP estimation to find the approximate coordinates with the maximum likelihood.

    Parameters:
    - bayesian_likelihood: Dictionary containing Bayesian likelihood values.

    Returns:
    - map_estimates: Dictionary with the approximate coordinates for each device and frequency.
    """
    map_estimates = {}

    for device, frequencies in bayesian_likelihood.items():
        map_estimates[device] = {}
        
        for frequency, likelihood_values in frequencies.items():
            # Convert the list to a NumPy array
            likelihood_array = np.array(likelihood_values)
            
            # Find the indices of the maximum likelihood
            max_indices = np.unravel_index(np.argmax(likelihood_array, axis=None), likelihood_array.shape)
            
            # Store the approximate coordinates in the map_estimates dictionary
            map_estimates[device][frequency] = max_indices

    return map_estimates

bayesian_likelihood_values = {
    'a23': {
        '2.4GHz': [[0.2673486511162964, 1.125780751821008e-24, 0.9240537029642729, 0.13815594424932293, 0.9953523115959746, 0.9862137874372863], 
                   [0.9527248895682517, 0.904701068765087, 0.9999298034716859, 0.006938652975897132, 1.2964519320679482e-14, 1.7547835380787956e-08], 
                   [0.962414060911246, 9.184185094628853e-10, 0.9978461692002212, 0.9806732305648651, 0.9961130790691423, 0.25003229090619467], 
                   [0.9999997257852243, 0.1822373176361757, 0.5729961388055421, 0.9689470367776376, 0.4289043879477593, 0.8448908933260346], 
                   [0.9741288117585531, 0.04103674707206456, 0.13123288433074207, 0.6652525129464391, 0.9994584877802176, 0.9999906468933081], 
                   [9.593042388426586e-09, 0.9999861336285428, 0.04653102957513734, 0.07767891507712804, 0.9447857929838628, 0.1399214922071242],
                   [0.04490748304430142, 9.604459128819339e-14, 0.9802797225630673, 0.004946540131648692, 0.0410367470720637, 0]
                   ],
        '5GHz': [[0.9967766675508066, 0.9958707204680537, 0.9963446429322348, 0.9999991333461508, 0.8291575556488487, 0.9999906468933081], 
                 [0.8659412759878465, 8.58445802767676e-15, 0.9938440500836367, 6.155636120478249e-84, 0.9999724263456814, 0.675538038590443], 
                 [0.00044548571236204963, 0.0010719040841749535, 0.2648435276963199, 7.181955425803641e-07, 1.1110144110335552e-07, 0.8362676528166891], 
                 [0.9855952873762884, 0.9059242240311589, 0.00022273434855091807, 4.591011951213879e-15, 0.9999998677590687, 0.9630458693249674], 
                 [0.999644680742803, 0.19922854108931365, 0.9997002927822398, 0.7948428463160113, 0.03538128223519629, 1.713333312604546e-06], 
                 [2.3556816969157284e-102, 0.11965407120046503, 1.076531743098853e-32, 0.15454452507230954, 0.9974394259412397, 2.333122820576258e-10], 
                 [4.0063846064791087e-10, 2.3609401413043088e-146, 2.9648661392459456e-26, 7.075435892439389e-05, 0.9999298034716859, 0]],
    },
    'f3': {
        '2.4GHz': [[0.0, 5.514037868205776e-93, 1.14683333002249e-15, 6.066943531052029e-75, 1.1211591724337518e-177, 2.957065020384027e-98], 
                   [9.092536155440238e-42, 1.8306375652310771e-31, 6.011981362758113e-50, 9.227009259419207e-70, 9.821980505151736e-54, 0.48399354443984716], 
                   [3.2444393643064216e-18, 6.203042470473895e-46, 5.066964937767353e-44, 4.4657415337306055e-21, 1.3134674172797883e-24, 0.9995816689254532], 
                   [0.9987305052972494, 5.872459899061028e-29, 9.698637649632634e-35, 6.456303500454239e-06, 1.0538223074152927e-169, 2.9601906265504447e-21], 
                   [0.3944591691781148, 7.68505563860147e-05, 9.900366933554171e-29, 6.8141116809572955e-09, 0.16806046316561163, 6.718926944442328e-21], 
                   [1.917126307116946e-05, 0.004688578662584263, 0.0039829366385800025, 0.023390856383496576, 0.9654961981547688, 1.125267210774133e-12], 
                   [3.1816301086927825e-10, 0.34946844949088474, 3.3460965369617183e-15, 0.2981712622215467, 0.00014604361245261854, 1.0]
                   ],
        '5GHz': [[0.6173793671470472, 5.545182593543782e-11, 0.8105607097882267, 0.0019978965974064918, 7.074767595984555e-25, 0.9769155383380103], 
                 [0.004093741615703034, 8.169207999184994e-08, 0.7055287627073011, 6.485566040373628e-35, 1.5471781979275212e-26, 0.9969777577394684], 
                 [0.14712243955126458, 0.09165065731275084, 0.7103944563364073, 1.7198503391205158e-23, 0.9999956125726119, 0.00011073791934261036], 
                 [0.9999457744197775, 0.9997172906436268, 0.0006747201527647172, 0.8327361088478132, 0.9731473561147149, 6.2848995019225535e-15], 
                 [0.9919975860422177, 0.8162627714050703, 0.910709325691732, 0.8850357093829284, 0.9736414323421118, 0.9836161827265367], 
                 [0.9956172413523546, 0.9988774466596264, 0.30079972828785045, 0.6881962111944613, 0.4520609576828452, 0.4462626733663943], 
                 [3.353105243513025e-13, 0.9999999997884145, 0.04332726020333666, 0.012417219922748518, 0.003371023567720765, 1.0]
                 ],
    },
}

map_results = map_estimation(bayesian_likelihood_values)

# Print the results
for device, frequencies in map_results.items():
    for frequency, coordinates in frequencies.items():
        print(f"Device: {device}, Frequency: {frequency}, MAP Coordinates: {coordinates}")